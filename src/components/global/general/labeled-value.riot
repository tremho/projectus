
<labeled-value>
    <div>
        <span class="label">{props.title || props.label}</span><div class="value" style="width:{props.width || '100%'};"><slot/>{props.value}</div>
    </div>
    <style>
        div.value {
            display:inline-block;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            vertical-align: bottom;
        }
        /* We can hover over and use arrow keys to scroll */
        div.value:hover {
            overflow: scroll;
            text-overflow: unset;
            background-color: lightgoldenrodyellow;
        }
    </style>
    <script>
        import {newCommon} from '../../Common';
        let cm;
        export default {
            state: { },
            bound: {},
            onBeforeMount(props, state) {
              console.log(this.root.tagName, 'onBeforeMount', props, state)
              cm = newCommon(this)
            },    
            onMounted(props, state) {
              cm.bindComponent()
            },
            onBeforeUpdate(props, state) {              
            },
            onUpdated(props, state) {              
            },
            onBeforeUnmount(props, state) {              
            },
            onUnmounted(props, state) {              
            }
    }
    </script>
</labeled-value>    
