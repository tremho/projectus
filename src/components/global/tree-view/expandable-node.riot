<expandable-node>
    <div onclick="{handleClick}"><span>{ props.label}</span>
        <span if="{ state.isBranch }">
            <span if="{state.open}" style="display: inline-block; width: 20px; text-align: right">-</span>
            <span if="{!state.open}" style="display: inline-block; width: 20px; text-align: right">+</span>
        </span>
        <div if="{state.open}" style="margin-left: 30px;">
        <slot/>
        </div>
    </div>
    <script>

      import {newCommon} from '../../Common';
      let cm;


      export default {

        onBeforeMount (props, state) {
          cm = newCommon(this)
          this.state = {
            app: cm.getApp(),
            open: false,
            item: props.item,
            onClick: props.item.click,
            get isBranch () { return this.item.items ? this.item.items.length !== 0 : false }
          }
        },
        handleClick: (e) => {
          const self = cm.getComponent(e.srcElement)
          if (self.state.onClick) {
            self.state.onClick(e)
          }
          e.preventDefault()
          e.stopPropagation()
          if (self.state.isBranch) {
            return self.state.open ? self.collapse(self) : self.expand(self)
          }
        },
        expand: (self) => {
          if (!self.state.open) {
            // console.log('expand')
            self.state.open = true
          }
          self.update()
        },
        collapse: (self) => {
          // console.log('collapse')
          const branch = cm.getComponent(self.$('tree-view'));
          self.state.open = false
          if (branch) branch.unmount()
          self.update()
        }
      }
    </script>
</expandable-node>
